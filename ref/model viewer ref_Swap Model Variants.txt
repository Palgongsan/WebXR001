Swap Model Variants
This demonstrates the use of the glTF materials variants extension which allows multiple materials and textures to be packed with a single geometry in a GLB. Our API exposes these variant names as availableVariants and you can select one using the variantName attribute. This is similar functionality to the lower-level scene-graph API below, but in that case it is up to you to choose the right texture URL, rather than having that information stored in the GLB. Note: setting variantName to null reverts to the initial material.

<model-viewer id="shoe" camera-controls touch-action="pan-y" src="../../shared-assets/models/glTF-Sample-Assets/Models/MaterialsVariantsShoe/glTF-Binary/MaterialsVariantsShoe.glb" ar alt="A 3D model of a Shoe">
                  <div class="controls glass">
                    <div>Variant: <select id="variant"></select></div>
                  </div>
                </model-viewer>
                <script>
                  const modelViewerVariants = document.querySelector("model-viewer#shoe");
                  const select = document.querySelector('#variant');

                  modelViewerVariants.addEventListener('load', () => {
                    const names = modelViewerVariants.availableVariants;
                    for (const name of names) {
                      const option = document.createElement('option');
                      option.value = name;
                      option.textContent = name;
                      select.appendChild(option);
                    }
                    // Adds a default option.
                    const option = document.createElement('option');
                    option.value = 'default';
                    option.textContent = 'Default';
                    select.appendChild(option);
                  });

                  select.addEventListener('input', (event) => {
                    modelViewerVariants.variantName = event.target.value === 'default' ? null : event.target.value;
                  });
                </script>